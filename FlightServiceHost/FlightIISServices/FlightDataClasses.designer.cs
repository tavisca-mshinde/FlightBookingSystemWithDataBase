#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlightIISServices
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FlightBookingSystemDatabase")]
	public partial class FlightDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBooking(Booking instance);
    partial void UpdateBooking(Booking instance);
    partial void DeleteBooking(Booking instance);
    partial void InsertCardDetail(CardDetail instance);
    partial void UpdateCardDetail(CardDetail instance);
    partial void DeleteCardDetail(CardDetail instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertFlight(Flight instance);
    partial void UpdateFlight(Flight instance);
    partial void DeleteFlight(Flight instance);
    #endregion
		
		public FlightDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FlightBookingSystemDatabaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FlightDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FlightDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FlightDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FlightDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Booking> Bookings
		{
			get
			{
				return this.GetTable<Booking>();
			}
		}
		
		public System.Data.Linq.Table<CardDetail> CardDetails
		{
			get
			{
				return this.GetTable<CardDetail>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Flight> Flights
		{
			get
			{
				return this.GetTable<Flight>();
			}
		}
		
		public System.Data.Linq.Table<FlightClass> FlightClasses
		{
			get
			{
				return this.GetTable<FlightClass>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAddBooking")]
		public int spAddBooking([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerName", DbType="NVarChar(50)")] string customerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailId", DbType="NVarChar(50)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MobileNumber", DbType="NVarChar(10)")] string mobileNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BookingId", DbType="NVarChar(20)")] string bookingId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FlightId", DbType="BigInt")] System.Nullable<long> flightId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AirlineName", DbType="NVarChar(20)")] string airlineName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FSource", DbType="NVarChar(20)")] string fSource, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Destination", DbType="NVarChar(20)")] string destination, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Class", DbType="NVarChar(50)")] string @class, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="BigInt")] System.Nullable<long> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartureTime", DbType="NVarChar(20)")] string departureTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArrivalTime", DbType="NVarChar(20)")] string arrivalTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BookingStatus", DbType="NVarChar(20)")] string bookingStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerName, emailId, mobileNumber, bookingId, flightId, airlineName, fSource, destination, @class, price, departureTime, arrivalTime, bookingStatus);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spCancelBooking")]
		public int spCancelBooking([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string bookindId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bookindId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSaveCardDetails")]
		public int spSaveCardDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CardNumer", DbType="BigInt")] System.Nullable<long> cardNumer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ValidTillMonthAndYear", DbType="NVarChar(10)")] string validTillMonthAndYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CVV", DbType="Int")] System.Nullable<int> cVV, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CardHolderName", DbType="NVarChar(50)")] string cardHolderName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cardNumer, validTillMonthAndYear, cVV, cardHolderName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetFlightsBySourceDestinationTravellersAndClass")]
		public ISingleResult<spGetFlightsBySourceDestinationTravellersAndClassResult> spGetFlightsBySourceDestinationTravellersAndClass([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string fsource, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string destination, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> traveller, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string flightClass)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fsource, destination, traveller, flightClass);
			return ((ISingleResult<spGetFlightsBySourceDestinationTravellersAndClassResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Booking")]
	public partial class Booking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BookingId;
		
		private int _CustomerID;
		
		private long _FlightId;
		
		private string _AirlineName;
		
		private string _FSource;
		
		private string _Destination;
		
		private string _Class;
		
		private long _Price;
		
		private string _DepartureTime;
		
		private string _ArrivalTime;
		
		private string _BookingStatus;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Flight> _Flight;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookingIdChanging(string value);
    partial void OnBookingIdChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnFlightIdChanging(long value);
    partial void OnFlightIdChanged();
    partial void OnAirlineNameChanging(string value);
    partial void OnAirlineNameChanged();
    partial void OnFSourceChanging(string value);
    partial void OnFSourceChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnPriceChanging(long value);
    partial void OnPriceChanged();
    partial void OnDepartureTimeChanging(string value);
    partial void OnDepartureTimeChanged();
    partial void OnArrivalTimeChanging(string value);
    partial void OnArrivalTimeChanged();
    partial void OnBookingStatusChanging(string value);
    partial void OnBookingStatusChanged();
    #endregion
		
		public Booking()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Flight = default(EntityRef<Flight>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingId", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BookingId
		{
			get
			{
				return this._BookingId;
			}
			set
			{
				if ((this._BookingId != value))
				{
					this.OnBookingIdChanging(value);
					this.SendPropertyChanging();
					this._BookingId = value;
					this.SendPropertyChanged("BookingId");
					this.OnBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightId", DbType="BigInt NOT NULL")]
		public long FlightId
		{
			get
			{
				return this._FlightId;
			}
			set
			{
				if ((this._FlightId != value))
				{
					if (this._Flight.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlightIdChanging(value);
					this.SendPropertyChanging();
					this._FlightId = value;
					this.SendPropertyChanged("FlightId");
					this.OnFlightIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirlineName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string AirlineName
		{
			get
			{
				return this._AirlineName;
			}
			set
			{
				if ((this._AirlineName != value))
				{
					this.OnAirlineNameChanging(value);
					this.SendPropertyChanging();
					this._AirlineName = value;
					this.SendPropertyChanged("AirlineName");
					this.OnAirlineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FSource", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string FSource
		{
			get
			{
				return this._FSource;
			}
			set
			{
				if ((this._FSource != value))
				{
					this.OnFSourceChanging(value);
					this.SendPropertyChanging();
					this._FSource = value;
					this.SendPropertyChanged("FSource");
					this.OnFSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt NOT NULL")]
		public long Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartureTime", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string DepartureTime
		{
			get
			{
				return this._DepartureTime;
			}
			set
			{
				if ((this._DepartureTime != value))
				{
					this.OnDepartureTimeChanging(value);
					this.SendPropertyChanging();
					this._DepartureTime = value;
					this.SendPropertyChanged("DepartureTime");
					this.OnDepartureTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalTime", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ArrivalTime
		{
			get
			{
				return this._ArrivalTime;
			}
			set
			{
				if ((this._ArrivalTime != value))
				{
					this.OnArrivalTimeChanging(value);
					this.SendPropertyChanging();
					this._ArrivalTime = value;
					this.SendPropertyChanged("ArrivalTime");
					this.OnArrivalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingStatus", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BookingStatus
		{
			get
			{
				return this._BookingStatus;
			}
			set
			{
				if ((this._BookingStatus != value))
				{
					this.OnBookingStatusChanging(value);
					this.SendPropertyChanging();
					this._BookingStatus = value;
					this.SendPropertyChanged("BookingStatus");
					this.OnBookingStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Booking", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerId", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._CustomerID = value.CustomerId;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_Booking", Storage="_Flight", ThisKey="FlightId", OtherKey="FlightId", IsForeignKey=true)]
		public Flight Flight
		{
			get
			{
				return this._Flight.Entity;
			}
			set
			{
				Flight previousValue = this._Flight.Entity;
				if (((previousValue != value) 
							|| (this._Flight.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Flight.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._Flight.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._FlightId = value.FlightId;
					}
					else
					{
						this._FlightId = default(long);
					}
					this.SendPropertyChanged("Flight");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CardDetail")]
	public partial class CardDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _CardNumber;
		
		private string _ValidTillMonthAndYear;
		
		private int _CVV;
		
		private string _CardHolderName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCardNumberChanging(long value);
    partial void OnCardNumberChanged();
    partial void OnValidTillMonthAndYearChanging(string value);
    partial void OnValidTillMonthAndYearChanged();
    partial void OnCVVChanging(int value);
    partial void OnCVVChanged();
    partial void OnCardHolderNameChanging(string value);
    partial void OnCardHolderNameChanged();
    #endregion
		
		public CardDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNumber", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long CardNumber
		{
			get
			{
				return this._CardNumber;
			}
			set
			{
				if ((this._CardNumber != value))
				{
					this.OnCardNumberChanging(value);
					this.SendPropertyChanging();
					this._CardNumber = value;
					this.SendPropertyChanged("CardNumber");
					this.OnCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidTillMonthAndYear", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ValidTillMonthAndYear
		{
			get
			{
				return this._ValidTillMonthAndYear;
			}
			set
			{
				if ((this._ValidTillMonthAndYear != value))
				{
					this.OnValidTillMonthAndYearChanging(value);
					this.SendPropertyChanging();
					this._ValidTillMonthAndYear = value;
					this.SendPropertyChanged("ValidTillMonthAndYear");
					this.OnValidTillMonthAndYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVV", DbType="Int NOT NULL")]
		public int CVV
		{
			get
			{
				return this._CVV;
			}
			set
			{
				if ((this._CVV != value))
				{
					this.OnCVVChanging(value);
					this.SendPropertyChanging();
					this._CVV = value;
					this.SendPropertyChanged("CVV");
					this.OnCVVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardHolderName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CardHolderName
		{
			get
			{
				return this._CardHolderName;
			}
			set
			{
				if ((this._CardHolderName != value))
				{
					this.OnCardHolderNameChanging(value);
					this.SendPropertyChanging();
					this._CardHolderName = value;
					this.SendPropertyChanged("CardHolderName");
					this.OnCardHolderNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private string _CustomerName;
		
		private string _EmailId;
		
		private string _MobileNumber;
		
		private EntitySet<Booking> _Bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnEmailIdChanging(string value);
    partial void OnEmailIdChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    #endregion
		
		public Customer()
		{
			this._Bookings = new EntitySet<Booking>(new Action<Booking>(this.attach_Bookings), new Action<Booking>(this.detach_Bookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this.OnEmailIdChanging(value);
					this.SendPropertyChanging();
					this._EmailId = value;
					this.SendPropertyChanged("EmailId");
					this.OnEmailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Booking", Storage="_Bookings", ThisKey="CustomerId", OtherKey="CustomerID")]
		public EntitySet<Booking> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Flight")]
	public partial class Flight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _FlightId;
		
		private string _AirlineName;
		
		private string _FSource;
		
		private string _Destination;
		
		private string _ArrivalTime;
		
		private string _DepartureTime;
		
		private double _Rating;
		
		private EntitySet<Booking> _Bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlightIdChanging(long value);
    partial void OnFlightIdChanged();
    partial void OnAirlineNameChanging(string value);
    partial void OnAirlineNameChanged();
    partial void OnFSourceChanging(string value);
    partial void OnFSourceChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnArrivalTimeChanging(string value);
    partial void OnArrivalTimeChanged();
    partial void OnDepartureTimeChanging(string value);
    partial void OnDepartureTimeChanged();
    partial void OnRatingChanging(double value);
    partial void OnRatingChanged();
    #endregion
		
		public Flight()
		{
			this._Bookings = new EntitySet<Booking>(new Action<Booking>(this.attach_Bookings), new Action<Booking>(this.detach_Bookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long FlightId
		{
			get
			{
				return this._FlightId;
			}
			set
			{
				if ((this._FlightId != value))
				{
					this.OnFlightIdChanging(value);
					this.SendPropertyChanging();
					this._FlightId = value;
					this.SendPropertyChanged("FlightId");
					this.OnFlightIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirlineName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string AirlineName
		{
			get
			{
				return this._AirlineName;
			}
			set
			{
				if ((this._AirlineName != value))
				{
					this.OnAirlineNameChanging(value);
					this.SendPropertyChanging();
					this._AirlineName = value;
					this.SendPropertyChanged("AirlineName");
					this.OnAirlineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FSource", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string FSource
		{
			get
			{
				return this._FSource;
			}
			set
			{
				if ((this._FSource != value))
				{
					this.OnFSourceChanging(value);
					this.SendPropertyChanging();
					this._FSource = value;
					this.SendPropertyChanged("FSource");
					this.OnFSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalTime", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ArrivalTime
		{
			get
			{
				return this._ArrivalTime;
			}
			set
			{
				if ((this._ArrivalTime != value))
				{
					this.OnArrivalTimeChanging(value);
					this.SendPropertyChanging();
					this._ArrivalTime = value;
					this.SendPropertyChanged("ArrivalTime");
					this.OnArrivalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartureTime", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string DepartureTime
		{
			get
			{
				return this._DepartureTime;
			}
			set
			{
				if ((this._DepartureTime != value))
				{
					this.OnDepartureTimeChanging(value);
					this.SendPropertyChanging();
					this._DepartureTime = value;
					this.SendPropertyChanged("DepartureTime");
					this.OnDepartureTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Float NOT NULL")]
		public double Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_Booking", Storage="_Bookings", ThisKey="FlightId", OtherKey="FlightId")]
		public EntitySet<Booking> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Flight = this;
		}
		
		private void detach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Flight = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FlightClass")]
	public partial class FlightClass
	{
		
		private long _FlightId;
		
		private string _Class;
		
		private int _Price;
		
		private int _AvailableSeat;
		
		public FlightClass()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightId", DbType="BigInt NOT NULL")]
		public long FlightId
		{
			get
			{
				return this._FlightId;
			}
			set
			{
				if ((this._FlightId != value))
				{
					this._FlightId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this._Class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableSeat", DbType="Int NOT NULL")]
		public int AvailableSeat
		{
			get
			{
				return this._AvailableSeat;
			}
			set
			{
				if ((this._AvailableSeat != value))
				{
					this._AvailableSeat = value;
				}
			}
		}
	}
	
	public partial class spGetFlightsBySourceDestinationTravellersAndClassResult
	{
		
		private long _FlightId;
		
		private string _AirlineName;
		
		private string _FSource;
		
		private string _Destination;
		
		private string _ArrivalTime;
		
		private string _DepartureTime;
		
		private double _Rating;
		
		private int _Price;
		
		private int _AvailableSeat;
		
		public spGetFlightsBySourceDestinationTravellersAndClassResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightId", DbType="BigInt NOT NULL")]
		public long FlightId
		{
			get
			{
				return this._FlightId;
			}
			set
			{
				if ((this._FlightId != value))
				{
					this._FlightId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirlineName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string AirlineName
		{
			get
			{
				return this._AirlineName;
			}
			set
			{
				if ((this._AirlineName != value))
				{
					this._AirlineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FSource", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string FSource
		{
			get
			{
				return this._FSource;
			}
			set
			{
				if ((this._FSource != value))
				{
					this._FSource = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this._Destination = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalTime", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ArrivalTime
		{
			get
			{
				return this._ArrivalTime;
			}
			set
			{
				if ((this._ArrivalTime != value))
				{
					this._ArrivalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartureTime", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string DepartureTime
		{
			get
			{
				return this._DepartureTime;
			}
			set
			{
				if ((this._DepartureTime != value))
				{
					this._DepartureTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Float NOT NULL")]
		public double Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this._Rating = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableSeat", DbType="Int NOT NULL")]
		public int AvailableSeat
		{
			get
			{
				return this._AvailableSeat;
			}
			set
			{
				if ((this._AvailableSeat != value))
				{
					this._AvailableSeat = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
